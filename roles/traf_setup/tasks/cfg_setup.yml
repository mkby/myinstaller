# TODO: add ldap security config
- name: Disable iptables
  service: name=iptables state=stopped
  when: ansible_os_family == 'RedHat' or ansible_os_family == 'CentOS'

- name: Set max Kernel pid
  shell: "sysctl -w kernel.pid_max=65535 2>&1 > /dev/null"
  sudo_user: root
  sudo: yes

#set as default value
- set_fact:
    hbase_lib_path: "/usr/lib/hbase/lib"

# use the default parcel dir
- name: Detect HBase lib path for cdh parcel
  stat: path=/opt/cloudera/parcels/CDH/lib/hbase/lib
  register: parcel

- set_fact:
    hbase_lib_path: "/opt/cloudera/parcels/CDH/lib/hbase/lib"
  when: parcel.stat.exists==True

# cdh setting, just put it here to run on all nodes
- name: Copy HBase trx jar file to all nodes
  shell: "cp /home/trafodion/trafodion-{{ traf_ver }}/export/lib/hbase-trx-cdh* {{ hbase_lib_path }}"
  sudo: yes

# dcs
- name: Get network interface
  shell: "netstat -rn | grep '^0.0.0.0' | awk '{print $8}'"
  register: net_interface

- name: Get zookeeper quorum
  shell: "grep 'hbase.zookeeper.quorum' -A1 {{ hbase_xml_file }} |tail -n1|sed s'/.*<value>\\(.*\\)<\\/value>/\\1/g'"
  register: zookeeper_quorum

- set_fact:
    interface: "{{ net_interface.stdout }}"
    zk_hosts: "{{ zookeeper_quorum.stdout }}"
    dcs_srv_file: "{{ sq_root }}/dcs-{{ traf_ver }}/conf/servers"
    dcs_bkmaster_file: "{{ sq_root }}/dcs-{{ traf_ver }}/conf/backup-masters"
    dcs_site_file: "{{ sq_root }}/dcs-{{ traf_ver }}/conf/dcs-site.xml"
    rest_site_file: "{{ sq_root }}/rest-{{ traf_ver }}/conf/rest-site.xml"
    dcs_backup_nodes: "{{ dcs_bknodes.split() }}"

- name: Generate dcs-site.xml
  template: src=dcs-site.xml.j2 dest={{ dcs_site_file }}
  sudo: yes
  when: dcs_ha=='N'

- name: Generate dcs-site.xml for DCS HA
  template: src=dcs-site-ha.xml.j2 dest={{ dcs_site_file }}
  sudo: yes
  when: dcs_ha=='Y'

- name: Generate sudoers config for trafodion user
  copy: src=trafodion_sudoer_cfg dest=/etc/sudoers.d/
  sudo: yes
  when: dcs_ha=='Y'

- name: Mod trafci for DCS HA
  replace: dest={{ sq_root }}/trafci/bin/trafci regexp='localhost' replace={{ dcs_ip }}
  sudo: yes
  when: dcs_ha=='Y'

- name: Mod backup-master file
  lineinfile: dest={{ dcs_bkmaster_file }} line={{ item }}
  with_items: dcs_backup_nodes
  sudo: yes
  when: dcs_ha=='Y'

- name: Generate rest-site.xml
  template: src=rest-site.xml.j2 dest={{ rest_site_file }}
  sudo: yes

- name: Clean up servers file
  lineinfile: dest={{ dcs_srv_file }} line="localhost 2" state=absent
  sudo: yes

- name: Generate servers file
  lineinfile: dest={{ dcs_srv_file }} line="{{ item }} {{ dcs_cnt_per_node }}"
  with_items: node_list.split()
  sudo: yes

- name: Set dcs install path in sqenvcom.sh
  lineinfile: dest={{ sq_root }}/sqenvcom.sh
              line="export DCS_INSTALL_DIR={{ sq_root }}/dcs-{{ traf_ver }}"
  sudo: yes

- name: Set rest install path in sqenvcom.sh
  lineinfile: dest={{ sq_root }}/sqenvcom.sh
              line="export REST_INSTALL_DIR={{ sq_root }}/rest-{{ traf_ver }}"
  sudo: yes
