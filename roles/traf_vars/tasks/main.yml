---
# set default value if not provided by user input
- set_fact:
    traf_start: "y"
    when: traf_start==''
- set_fact:
    traf_pwd: "traf123"
    when: traf_pwd==''
- set_fact:
    hdfs_user: "hdfs"
    when: hdfs_user==''
- set_fact:
    hbase_user: "hbase"
    when: hbase_user==''
- set_fact:
    hbase_group: "hbase"
    when: hbase_group==''
- set_fact:
    ldap_security: "n"
    when: ldap_security==''
- set_fact:
    dcs_ha: "n"
    when: dcs_ha==''
- set_fact:
    mgr_user: "admin"
    when: mgr_user==''
- set_fact:
    mgr_pwd: "admin"
    when: mgr_pwd==''


- name: Check Manager URL
  uri: url=http://{{ mgr_url }}/api/v1/clusters/
       method=GET
       user={{ mgr_user }}
       password={{ mgr_pwd }}
  register: clusters

- name: Check Hadoop version should be CDH/HDP
  shell: "echo {{ clusters.json['items'][0].version }} | egrep '(CDH|HDP)'"
  register: hadoop_ver
  failed_when: hadoop_ver.stdout==''
    
- name: Check RPM file existence
  stat: path={{ traf_rpm }}
  register: p
  failed_when: p.stat.exists==False

- set_fact:
    # for now, assume there's only one cluster managed
    cluster_name: "{{ clusters.json['items'][0].name }}"
    hadoop_version: "{{ hadoop_ver.stdout }}"

- name: Get Cloudera Deployment Info
  uri: url=http://{{ mgr_url }}/api/v6/cm/deployment
       method=GET
       user={{ mgr_user }}
       password={{ mgr_pwd }}
  register: cm

- set_fact:
    rs_hostid:  "{% for c in cm.json.clusters %} 
                   {% if c.displayName==cluster_name %} 
                     {% for s in c.services %} 
                       {% if s.type=='HBASE' %} 
                         {% for r in s.roles %} 
                           {% if r.type=='REGIONSERVER' %} {{ r.hostRef.hostId }} {% endif %}
                         {% endfor %}
                       {% endif %}
                     {% endfor %}
                   {% endif %}
                 {% endfor %}"

- set_fact:
    rs_hostids: "{{ rs_hostid.split() }}"

- set_fact:
    node_list: "{% for id in rs_hostids %} 
                  {% for h in cm.json.hosts %} 
                    {% if id==h.hostId %} {{ h.hostname }} {% endif %}
                  {% endfor %}
                {% endfor %}"
  when: node_list==''

- set_fact:
    node_array: "{{ node_list.split() | sort }}"

#- set_fact:
#    dcs_cnt_per_node: 8
#  when: dcs_cnt_per_node==''

- set_fact:
    # used in URL
    cluster_name: "{{ cluster_name|replace(' ','%20') }}"
    my_nodes: "{{ '-w ' + node_array|join(' -w ') }}"
    node_list: "{{ ' ' + node_array|join(' ') }}"
    first_node: "{{ node_array[0] }}"
    hbase_xml_file: "/etc/hbase/conf/hbase-site.xml"
    rpm_basename: "trafodion"
    dcs_count: "{{ node_array|length() * dcs_cnt_per_node|int }}"


    

- name: Set ansible cfg and hosts file
  script: gen_cfgs.py "{{ installer_loc }}" "\"{{ node_list }}\""  

- name: Save Variables
  template: src=config.yml.j2 dest={{ installer_loc }}/group_vars/all.yml
