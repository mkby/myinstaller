- name: Install epel repo if not exists
  copy: src=epel.repo dest=/etc/yum.repos.d/ force=no
  become: yes
  when: ansible_os_family == 'RedHat' and offline_mode is not defined

- name: Copy trafodion RPM to all nodes
  copy: src={{ traf_rpm }} dest=/tmp/ force=yes

- name: Get RPM full name
  shell: "echo {{ traf_rpm }} | awk -F/ '{print $NF}'"
  register: fullname

- name: Set RPM name variable
  set_fact:
    rpm_name: "{{ fullname.stdout }}"
    
- name: Copy local repo config file to all nodes
  template: src=local_traf.repo.j2 dest=/etc/yum.repos.d/local_traf.repo
  become: yes
  when: offline_mode is defined

- name: Install trafodion RPM - CentOS
  yum: name="/tmp/{{ rpm_name }}" state=present
  become: yes
  register: rpm_installed
  when: ansible_os_family == 'RedHat'

# use zypper command directly since zypper module has bug
# which has been fixed only in later version of ansible
# https://github.com/ansible/ansible-modules-extras/pull/1256
- name: Install trafodion RPM - SuSE
  shell: "zypper install -y /tmp/{{ rpm_name }}"
  become: yes
  register: rpm_installed_suse
  when: ansible_os_family == 'Suse'

#- name: Install trafodion RPM - SuSE
#  zypper: name="/tmp/{{ rpm_name }}" state=present
#  become: yes
#  register: rpm_installed_suse
#  when: ansible_os_family == 'Suse'

- name: Reinstall trafodion RPM if already installed - CentOS
  shell: "rpm -i /tmp/{{ rpm_name }} --force"
  when: ansible_os_family == 'RedHat' and rpm_installed.changed==False
  become: yes

- name: Reinstall trafodion RPM if already installed - SuSE
  shell: "rpm -i /tmp/{{ rpm_name }} --force"
  when: ansible_os_family == 'SuSE' and rpm_installed_suse.changed==False
  become: yes

- name: Clean up local repo config file on all nodes
  file: path=/etc/yum.repos.d/local_traf.repo state=absent
  become: yes
  when: offline_mode is defined

- name: Create trafodion user if not exists
  user: name=trafodion shell=/bin/bash groups=trafodion
  become: yes

- name: Force set trafodion home folder owner to trafodion
  file: path=/home/trafodion owner=trafodion group=trafodion

- name: Get RPM location
  shell: "rpm -ql {{ traf_basename }}-{{ traf_version }} |head -1"
  register: traf_loc
    
- name: Set sqroot variables
  set_fact:
    sq_root: "{{ traf_loc.stdout }}"
  when: traf_loc|success
