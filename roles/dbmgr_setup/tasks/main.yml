---
- name: Make sure Trafodion is installed
  shell: "rpm -qa|grep -q {{ rpm_basename }}"
  register: traf_installed
  failed_when: traf_installed.rc==1

- name: Get RPM full name
  shell: "echo {{ dbmgr_rpm }} | awk -F/ '{print $NF}'"
  register: fullname

- name: Set esgynDB manager RPM name
  set_fact:
    dbmgr_rpmname: "{{ fullname.stdout }}"

- name: Copy esgynDB manager RPM to all nodes
  copy: src={{ dbmgr_rpm }} dest=/tmp/ force=yes

- name: Install esgynDB manager RPM - CentOS/RedHat
  yum: name="/tmp/{{ dbmgr_rpmname }}" state=present
  become: yes
  when: ansible_os_family == 'RedHat' or ansible_os_family == 'CentOS'

- name: Install esgynDB manager RPM - SuSE
  zypper: name="/tmp/{{ dbmgr_rpmname }}" state=present
  become: yes
  when: ansible_os_family == 'Suse'

- name: Get esgynDB manager RPM install location
  shell: "rpm -ql esgynDB-manager|head -1"
  register: dbmgr_loc

- name: Get RPM version
  shell: "echo {{ dbmgr_loc.stdout }} | sed -r 's/.*-(.*)/\\1/g'"
  register: dbmgr_version
  when: dbmgr_loc|success

- name: Set mgblty and dbmgr install directory
  set_fact:
    mgblty_install_dir: "{{ dbmgr_loc.stdout}}/mgblty"
    dbmgr_install_dir: "{{ dbmgr_loc.stdout }}/dbmgr-{{ dbmgr_version.stdout }}"
    dcs_master_host: "{{ groups['firstnode'][0] }}"

- name: Set dcs master hostname if DCS HA enabled
  set_fact:
    dcs_master_host: "{{ dcs_ip }}"
  when: dcs_ip is defined

- name: Export jython path to bashrc
  lineinfile: dest=/home/trafodion/.bashrc
              line="export PATH=$PATH:{{ mgblty_install_dir }}/jython2.7.0/bin"
  become: yes

- name: Export mgblty install dir to bashrc
  lineinfile: dest=/home/trafodion/.bashrc
              line="export MGBLTY_INSTALL_DIR={{ mgblty_install_dir }}"
  become: yes

- name: Export dbmgr install dir to bashrc
  lineinfile: dest=/home/trafodion/.bashrc
              line="export DBMGR_INSTALL_DIR={{ dbmgr_install_dir }}"
  become: yes

# This script will use hbase shell, so it should be better to run on regionserver node
# But esgyndb manager will be installed on the same node as Trafodion, so we have to run it on first trafodion node
- name: Create OpenTSDB tables
  shell: "export HBASE_HOME=/usr; export COMPRESSION=GZ; {{ mgblty_install_dir }}/opentsdb/tools/create_table.sh"
  become_user: trafodion
  become: yes
  when: inventory_hostname in groups['firstnode']

- name: Check ports
  script: check_ports.py
  register: ports

- name: Get esgynDB manager ports
  set_fact:
    dm_http_port: "{{ ports.stdout_lines[0] }}"
    dm_https_port: "{{ ports.stdout_lines[1] }}"
    tsd_port: "{{ ports.stdout_lines[2] }}"
    http_port: "{{ ports.stdout_lines[3] }}"
    rest_port: 4200
    dcs_port: 23400
    dcs_info_port: 24400

- name: Edit bosun.conf for http port
  replace: dest={{ mgblty_install_dir }}/bosun/conf/bosun.conf
           regexp='tsdbHost = .*'
           replace="tsdbHost = {{ dcs_master_host }}:{{ tsd_port }}"
  become: yes
  become_user: trafodion

- name: Edit opentsdb.conf for tsd port
  replace: dest={{ mgblty_install_dir }}/opentsdb/etc/opentsdb/opentsdb.conf
           regexp='tsd.network.port = .*'
           replace="tsd.network.port = {{ tsd_port }}"
  become_user: trafodion
  become: yes

- name: Get timezone
  script: gettimezone.sh
  register: tz

- name: Edit opentsdb.conf for time zone
  replace: dest={{ mgblty_install_dir }}/opentsdb/etc/opentsdb/opentsdb.conf
           regexp='tsd.core.timezone = .*'
           replace="tsd.core.timezone = {{ tz.stdout_lines[0] }}"
  become_user: trafodion
  become: yes

- name: Get zookeeper hostname
  set_fact:
    zkhosts: "{% for n in zookeeper_quorum.stdout.split(',') %} {{ n + ':2181' }} {% endfor %}"

- name: Edit opentsdb.conf for zookeeper nodes
  replace: dest={{ mgblty_install_dir }}/opentsdb/etc/opentsdb/opentsdb.conf
           regexp='tsd.storage.hbase.zk_quorum = .*'
           replace="tsd.storage.hbase.zk_quorum = {{ ','.join(zkhosts.split()) }}"
  become_user: trafodion
  become: yes

- name: Registering Metrics
  shell: "source /home/trafodion/.bashrc; {{ mgblty_install_dir }}/opentsdb/tools/register_metrics.sh"
  become_user: trafodion
  become: yes
  when: inventory_hostname in groups['firstnode']

- name: Edit tcollector startstop
  replace: dest={{ mgblty_install_dir }}/tcollector/startstop
           regexp='TSDPORT=.*'
           replace="TSDPORT={{ tsd_port }}"
  become_user: trafodion
  become: yes

- name: Edit tcollector trafcanqry
  replace: dest={{ mgblty_install_dir }}/tcollector/collectors/300/trafcanqry.py
           regexp='DCS_MASTER_HOST:DCS_PORT' replace="{{ dcs_master_host }}:{{ dcs_port }}"
  become_user: trafodion
  become: yes

- name: Get zookeeper quorum
  shell: "grep 'hbase.zookeeper.quorum' -A1 {{ hbase_xml_file }} |tail -n1|sed s'/.*<value>\\(.*\\)<\\/value>/\\1/g'"
  register: zookeeper_quorum

- name: Edit openTSDB logback.xml
  replace: dest={{ mgblty_install_dir }}/opentsdb/etc/opentsdb/logback.xml
           regexp='/var/log/opentsdb' replace='../../log'
  become_user: trafodion
  become: yes


- name: Configure esgynDB manager
  shell: "source /home/trafodion/.bashrc; {{ dbmgr_install_dir }}/bin/configure.py --httpport {{ dm_http_port }} --httpsport {{ dm_https_port }} --dcshost {{ ansible_hostname }} --dcsport {{ dcs_port }} --password dbmgr23400 --dcsinfoport {{ dcs_info_port }} --resthost {{ ansible_hostname }} --restport {{ rest_port }} --tsdhost {{ ansible_hostname }} --tsdport {{ tsd_port }} --bosunhost {{ ansible_hostname }} --bosunport {{ http_port }} --timezone {{ tz.stdout_lines[0] }}"
  become: yes
  become_user: trafodion
